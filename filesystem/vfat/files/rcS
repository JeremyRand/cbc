#!/bin/sh

#PRINT=/psp/rfs1/fb_print
PRINT=echo
chmod +x /psp/rfs1/fb_print

export LD_LIBRARY_PATH=/lib

echo "Starting udevd as daemon"
/sbin/udevd --daemon

# wait for USB subsystem to finish loading
/usr/chumby/scripts/wait_for_usb

echo "CBC Internal Boot Script" | $PRINT

mkdir -p /mnt/usb

internal=""
upgrade=""
maybe_internal=""

# loop through usb devices to find the userhook0s internal and external
for dev in sda sdb sdd sdc;
do
 # mount a device to location /mnt/usb with type vfat filesystem in a read only state
  mount /dev/${dev}1 /mnt/usb -t vfat -o ro
  
  if [ -e /mnt/usb/userhook0 ]; then
    type=`/mnt/usb/userhook0 --type`
    
    if [ "${type}" == "Upgrade" ]; then
      upgrade=${dev}
    elif [ "${type}" == "Firmware" ]; then
      internal=${dev}
    else
      maybe_internal=${dev}
    fi
  else
    maybe_internal=${dev}
  fi

  umount /mnt/usb
done

if [ -z "${internal}" -a -n "${maybe_internal}" ]; then
  internal=${maybe_internal}
fi

if [ -z "${internal}" ]; then
  echo "Could not find any internal drives!" | $PRINT
  exit 1
fi

# if there is no external usb userhook0 then we are not upgrading, boot cbc normally
if [ -z "${upgrade}" ]; then
  # mount the internal drive
  mount /dev/${internal}1 /mnt/usb -t vfat -o ro
  
  # execute the userhook0 if it exists
  if [ -e /mnt/usb/userhook0 ]; then
	 . /mnt/usb/userhook0 ${internal}
    exit 0
  else
    echo "Could not find boot script!" | $PRINT
    exit 1
  fi
fi

# otherwise mount the external drive
mount /dev/${upgrade}1 /mnt/usb -t vfat
# and execute an upgrade
/mnt/usb/userhook0 --upgrade ${internal} &
exit 0

